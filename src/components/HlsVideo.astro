---
interface Props {
  src: string;
  controls?: boolean;
  autoplay?: string;
  type?: "mp4" | "m3u8";
  poster?: string;
}

const { src, controls = false, autoplay, type = "mp4", poster } = Astro.props;
---

<hls-video>
  <video
    class="hls-video z-0 h-full w-full object-cover object-center"
    playsinline="true"
    webkit-playsinline="true"
    src={src}
    data-src={src}
    muted
    preload="preload"
    x-webkit-airplay="allow"
    x5-playsinline
    custom-cache="false"
    loop
  >
  </video>
  <div
    class="progress w-[20rem] h-0.5 bg-[#222222] pr-[20rem] fixed z-10 overflow-hidden border-box top-1/2 left-1/2 -translate-x-1/2 transition-all"
  >
    <div class="h-full bg-white"></div>
  </div>
  <div
    class="play-button absolute hidden top-1/2 left-1/2 -translate-x-1/2 z-20 cursor-pointer hover:opacity-60"
  >
    <div
      class="play-svg w-[5.625rem] h-[5.625rem] mobile:w-[2.75rem] mobile:h-[2.875rem]"
    >
    </div>
  </div>

  <script>
    import videojs from "video.js";
    import "video.js/dist/video-js.min.css";

    class HlsVideo extends HTMLElement {
      constructor() {
        super();
        const video = this.querySelector(".hls-video") as HTMLVideoElement;
        const progress = this.querySelector(".progress") as HTMLDivElement;
        const playButton = this.querySelector(".play-button") as HTMLDivElement;

        const player = videojs(video, {
          controls: false,
          autoplay: true,
          preload: "auto",
          bufferedPercent: 5000,
          muted: true, // 默认情况下将会消除任何音频。
          loop: true,
          sources: [
            {
              type: "application/x-mpegURL",
              src: video?.dataset["src"],
            },
          ],
        });
        let index = 0;

        player.on("progress", function () {
          index += 1;
          if (index === 1) {
            progress.style.paddingRight = "6rem";
          }
          if (index === 3) {
            progress.style.paddingRight = "2rem";
            progress.style.transition = "none";
          }
        });
        let isPlay = false;
        player.on("loadedmetadata", function () {
          progress.style.display = "none";
          setTimeout(() => {
            if (!isPlay && window.env.browser.name === "WeChat")
              playButton.style.display = "block";
          }, 100);
          if (!video.autoplay) video.play();
        });
        player.on("canplaythrough", function () {
          video.play();
        });
        player.on("play", function () {
          isPlay = true;
        });
        player.on("playing", function () {
          isPlay = true;
        });
        playButton.addEventListener("click", function () {
          // 监听视频播放开始
          playButton.style.display = "none";
          video.play();
        });
      }
    }

    customElements.define("hls-video", HlsVideo);
  </script>
  <style>
    .hls-video video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .play-svg {
      background: url(../assets/images/video.svg) no-repeat center center/ 100%
        auto;
    }
  </style>
</hls-video>

---
interface Props {
  src: string;
}

const { src } = Astro.props;
---

<web-video class="relative w-full flex flex-col" data-src={src}>
  <video
    class="video-js z-0 h-full w-full object-cover object-center"
    playsinline="true"
    webkit-playsinline="true"
    preload="preload"
    x-webkit-airplay="allow"
    x5-playsinline
    custom-cache="false"
    muted
    loop
  >
  </video>
  <!-- <div
    class="play-button w-full h-full absolute top-0 left-0 z-10 flex justify-center items-center cursor-pointer hover:opacity-60"
  >
    <div
      class="play-svg w-[5.625rem] h-[5.625rem] mobile:w-[2.75rem] mobile:h-[2.875rem]"
    >
    </div>
  </div> -->
</web-video>

<script>
  import { prefetch } from "astro:prefetch";
  import videojs from "video.js";
  import "video.js/dist/video-js.min.css";

  class WebVideo extends HTMLElement {
    private player?: ReturnType<typeof videojs>;
    constructor() {
      super();

      const source = this.dataset["src"] || "";
      // 预加载
      if (source) prefetch(source, { with: "fetch" });

      const video = this.querySelector<HTMLMediaElement>(".video-js");
      if (!video) return;
      this.player = videojs(video, {
        controls: true,
        autoplay: false,
        preload: "auto",
        aspectRatio: "16:9",
      });
      this.player.src(source);
    }
  }

  customElements.define("web-video", WebVideo);
</script>

<style is:global>
  web-video .video-js .vjs-big-play-button {
    border: none !important;
    color: transparent !important;
    font-size: 0 !important;
    width: 5.625rem;
    height: 5.625rem;
    background-color: transparent;
    border: none;
    background-image: url("../assets/images/video.svg");
  }
</style>

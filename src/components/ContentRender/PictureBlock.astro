---
import type { ContentUnionType, MetaOptions, PathOptions } from "./BlockType";
import BasePicture from "../BasePicture.astro";
import { getPublicSourcePath } from "@/utils/url";

interface Props {
  options: Extract<ContentUnionType, { type: "PictureBlock" }>;
  meta?: MetaOptions;
  path: PathOptions;
}

const { options, meta, path } = Astro.props;

const images = options.srcset.map((src) =>
  getPublicSourcePath([path.collection, ...path.paths], src),
);
---

<div
  class="grid gap-2 mobile:!grid-cols-1 grid-cols-12 mobile:gap-8 content-visibility contain-intrinsic-size"
  class:list={[
    options.className,
    {
      "pr-1": options.description,
    },
  ]}
>
  {
    options.picturePosition === "right" && (
      <div
        class="mobile:pb-6"
        class:list={[
          `col-span-${12 - Number(options.cols || 8)}`,
          {
            "mobile:hidden": !options.description,
          },
        ]}
      >
        {options.description}
      </div>
    )
  }
  {
    images.map((item) => (
      <div class={`col-span-${options.cols || 12}`}>
        <BasePicture src={item} alt={`image:${options.description || ""}`} />
      </div>
    ))
  }
  {
    options.description && options.picturePosition !== "right" && (
      <div
        class="pl-7 mobile:p-0 mobile:mt-[-8px]"
        class:list={[`col-span-${12 - Number(options.cols || 8)}`]}
      >
        {options.description}
      </div>
    )
  }
</div>
